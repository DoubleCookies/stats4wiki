import i18n from 'i18next';
import { initReactI18next } from 'react-i18next';
import detector from 'i18next-browser-languagedetector';

const resources = {
    en: {
        translation: {
            aboutTitle: "What is this project about?",
            workTitle: "How does it work?",
            plansTitle: "Any plans?",
            workList: "Everything is pretty simple and consistently:<1>" +
                "<0>Обращаемся к серверам Geometry Dash и получаем страницу (10 уровней). В зависимости " +
                "от типа (кол-во скачиваний/лайков) формируем два набора уровней.</0>" +
                "<0>Останавливаемся в тот момент, когда в списке будет 50 демонов (при этом автоматически " +
                "выполняется условие, что у нас будет 50 любых уровней).</0>" +
                "<0>Из каждого списка формируем ещё два — для всех видов уровней и только для демонов.</0>" +
                "<0>Каждый список переводим в текстовый формат (с учётом различных нюансов по типу шаблонов " +
                "сложности, наличия или отсутствия ссылок, разделителей и т. д.)</0>" +
                "<0>Из каждого списка формируем ещё два — для всех видов уровней и только для демонов.</0>" +
                "<0>Формируем текст для шаблонов и также сохраняем.</0>" +
                "<0><2>Done!</2></0>" +
                "</1>",
            plansList: "<0><1>Можно будет пройтись по старым коммитам, собрать информацию по прошлым месяцам/годам " +
                "и построить сводную табличку/график/<2>другую штуку</2>.</1>" +
                "<1>Добавить иллюстраций. Все же любят картинки?</1></0>",
        }
    },
    ru: {
        translation: {
            aboutTitle: "О чём этот проект?",
            aboutStart: "В данном проекте собираются данные по топ-50 самых скачиваемых и залайканных уровней " +
                "(как в целом, так и для отдельной категории \"демонических\" уровней), после чего формируется " +
                "таблица, которая затем размещается на Geometry Dash вики. Параллельно с этим генерируется " +
                "содержимое для пары шаблонов, которые используются в статьях про самые скачиваемые уровни.",
            aboutFinish: "В итоге получается своего рода полуавтоматическое обновление топов и шаблонов (и, как бонус, " +
                "на вики хранится история изменений этих топов).",
            workTitle: "Как он работает?",
            plansTitle: "Есть ли планы на будущее?",
            workList: "Всё довольно просто и последовательно:<1>" +
                "<0>Обращаемся к серверам Geometry Dash и получаем страницу (10 уровней). В зависимости " +
                "от типа (кол-во скачиваний/лайков) формируем два набора уровней.</0>" +
                "<0>Останавливаемся в тот момент, когда в списке будет 50 демонов (при этом автоматически " +
                "выполняется условие, что у нас будет 50 любых уровней).</0>" +
                "<0>Из каждого списка формируем ещё два — для всех видов уровней и только для демонов.</0>" +
                "<0>Каждый список переводим в текстовый формат (с учётом различных нюансов по типу шаблонов " +
                "сложности, наличия или отсутствия ссылок, разделителей и т. д.)</0>" +
                "<0>Из каждого списка формируем ещё два — для всех видов уровней и только для демонов.</0>" +
                "<0>Формируем текст для шаблонов и также сохраняем.</0>" +
                "<0><2>Готово!</2></0>" +
                "</1>",
            plansList: "<0><1>Можно будет пройтись по старым коммитам, собрать информацию по прошлым месяцам/годам " +
                "и построить сводную табличку/график/<2>другую штуку</2>.</1>" +
                "<1>Добавить иллюстраций. Все же любят картинки?</1></0>",
        }
    }
}

i18n.use(detector).use(initReactI18next).init({
        fallbackLng: 'en',
        resources,
    })

export default i18n;